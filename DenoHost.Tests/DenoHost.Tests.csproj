<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <PropertyGroup>
    <RuntimeIdentifiers>linux-arm64;linux-x64;osx-arm64;osx-x64;win-x64</RuntimeIdentifiers>
    <RuntimeIdentifier Condition="'$(RuntimeIdentifier)'==''">win-x64</RuntimeIdentifier>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="coverlet.collector" Version="6.0.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="coverlet.msbuild" Version="6.0.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.14.1" />
    <PackageReference Include="NJsonSchema" Version="11.5.1" />
    <PackageReference Include="xunit" Version="2.9.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.1.5">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\DenoHost.Core\DenoHost.Core.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'linux-arm64'">
    <ProjectReference Include="..\DenoHost.Runtime.linux-arm64\DenoHost.Runtime.linux-arm64.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'linux-x64'">
    <ProjectReference Include="..\DenoHost.Runtime.linux-x64\DenoHost.Runtime.linux-x64.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'osx-arm64'">
    <ProjectReference Include="..\DenoHost.Runtime.osx-arm64\DenoHost.Runtime.osx-arm64.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'osx-x64'">
    <ProjectReference Include="..\DenoHost.Runtime.osx-x64\DenoHost.Runtime.osx-x64.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'win-x64'">
    <ProjectReference Include="..\DenoHost.Runtime.win-x64\DenoHost.Runtime.win-x64.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="Xunit" />
  </ItemGroup>

  <Target Name="CopyDenoFromRuntime" AfterTargets="Build">
    <PropertyGroup>
      <DenoFile Condition="'$(OS)' == 'Windows_NT'">deno.exe</DenoFile>
      <DenoFile Condition="'$(OS)' != 'Windows_NT'">deno</DenoFile>

      <RuntimeProjectDir>$(MSBuildThisFileDirectory)..\DenoHost.Runtime.$(RuntimeIdentifier)</RuntimeProjectDir>
      <RuntimeOutputDir>$(RuntimeProjectDir)\bin\$(Configuration)\netstandard2.1\runtimes\$(RuntimeIdentifier)\native</RuntimeOutputDir>
      <TargetRuntimeDir>$(OutputPath)runtimes\$(RuntimeIdentifier)\native</TargetRuntimeDir>
    </PropertyGroup>

    <Message Text="Copying $(DenoFile) from: $(RuntimeOutputDir) to: $(TargetRuntimeDir)" Importance="High" />
    <Message Text="Build configuration: $(Configuration)" Importance="High" />

    <MakeDir Directories="$(TargetRuntimeDir)" />

    <Copy Condition="Exists('$(RuntimeOutputDir)\$(DenoFile)')" 
          SourceFiles="$(RuntimeOutputDir)\$(DenoFile)" 
          DestinationFiles="$(TargetRuntimeDir)\$(DenoFile)" 
          SkipUnchangedFiles="true" />
  </Target>

</Project>