<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <PropertyGroup>
    <RuntimeIdentifiers>linux-arm64;linux-x64;osx-arm64;osx-x64;win-x64</RuntimeIdentifiers>
    <RuntimeIdentifier Condition="'$(RuntimeIdentifier)'==''">win-x64</RuntimeIdentifier>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="coverlet.collector" Version="6.0.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="coverlet.msbuild" Version="6.0.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.14.1" />
    <PackageReference Include="NJsonSchema" Version="11.4.0" />
    <PackageReference Include="xunit" Version="2.9.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.1.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\DenoHost.Core\DenoHost.Core.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'linux-arm64'">
    <ProjectReference Include="..\DenoHost.Runtime.linux-arm64\DenoHost.Runtime.linux-arm64.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'linux-x64'">
    <ProjectReference Include="..\DenoHost.Runtime.linux-x64\DenoHost.Runtime.linux-x64.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'osx-arm64'">
    <ProjectReference Include="..\DenoHost.Runtime.osx-arm64\DenoHost.Runtime.osx-arm64.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'osx-x64'">
    <ProjectReference Include="..\DenoHost.Runtime.osx-x64\DenoHost.Runtime.osx-x64.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'win-x64'">
    <ProjectReference Include="..\DenoHost.Runtime.win-x64\DenoHost.Runtime.win-x64.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="Xunit" />
  </ItemGroup>

<ItemGroup>
  <!-- Only ensures build order without linking the runtime project -->
  <ProjectReference Include="..\DenoHost.Runtime.$(RuntimeIdentifier)\DenoHost.Runtime.$(RuntimeIdentifier).csproj"
                    ReferenceOutputAssembly="false" />
</ItemGroup>

<Target Name="CopyDenoFromRuntime" AfterTargets="Build">
  <PropertyGroup>
    <!-- File name depending on the builder's OS -->
    <DenoFile Condition="'$(OS)' == 'Windows_NT'">deno.exe</DenoFile>
    <DenoFile Condition="'$(OS)' != 'Windows_NT'">deno</DenoFile>

    <!-- Source: Output of the Runtime project -->
    <RuntimeProjectDir>$(MSBuildThisFileDirectory)..\DenoHost.Runtime.$(RuntimeIdentifier)</RuntimeProjectDir>
    <RuntimeOutputDir>$(RuntimeProjectDir)\bin\$(Configuration)\netstandard2.1\runtimes\$(RuntimeIdentifier)\native</RuntimeOutputDir>
    <RuntimeSource>$(RuntimeOutputDir)\$(DenoFile)</RuntimeSource>

    <!-- Target: absolute, not OutputPath -->
    <TargetRuntimeDir>$(TargetDir)runtimes\$(RuntimeIdentifier)\native\</TargetRuntimeDir>
    <TargetDest>$(TargetRuntimeDir)$(DenoFile)</TargetDest>
  </PropertyGroup>

  <Message Importance="high" Text="Copy deno from: $(RuntimeSource)" />
  <Message Importance="high" Text="               to: $(TargetDest)" />
  <Message Importance="high" Text="Configuration: $(Configuration) | RID=$(RuntimeIdentifier)" />

  <!-- Fails early if source is missing -->
  <Error Condition="!Exists('$(RuntimeSource)')"
         Text="Runtime source not found: $(RuntimeSource). Did the runtime project copy into its own output? Check the runtime csproj Copy target." />

  <MakeDir Directories="$(TargetRuntimeDir)" />

  <Copy SourceFiles="$(RuntimeSource)"
        DestinationFiles="$(TargetDest)"
        SkipUnchangedFiles="true" />
</Target>


</Project>
