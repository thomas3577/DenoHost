name: Check for new Deno release

on:
  schedule:
    - cron: '0 */12 * * *' # every 12 hours
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check_new_deno:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch latest Deno release
        id: deno
        run: |
          full_tag=$(curl -s https://api.github.com/repos/denoland/deno/releases/latest | jq -r .tag_name)
          echo "Latest Deno release: $full_tag"
          tag_core=${full_tag#v}  # remove leading "v" if present
          echo "tag_core=$tag_core" >> "$GITHUB_OUTPUT"
          echo "full_tag=$full_tag" >> "$GITHUB_OUTPUT"

      - name: Check if tag with this Deno version exists in DenoHost
        id: check
        run: |
          tag_core=${{ steps.deno.outputs.tag_core }}
          git_tags=$(git ls-remote --tags https://github.com/thomas3577/DenoHost.git | awk -F/ '{print $NF}')
          echo "Existing tags in DenoHost:"
          echo "$git_tags"
          found=$(echo "$git_tags" | grep -E "^v${tag_core}(-|$)" || true)

          if [[ -n "$found" ]]; then
            echo "✅ Already released: $found"
            echo "already_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "⚠️ No existing tag for v$tag_core"
            echo "already_exists=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create new tag and push
        if: steps.check.outputs.already_exists == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          git init
          git remote add origin https://x-access-token:${GH_TOKEN}@github.com/thomas3577/DenoHost.git
          git fetch origin main

          tag_core=${{ steps.deno.outputs.tag_core }}
          new_tag="v${tag_core}-alpha.1"

          echo "Creating and pushing new tag: $new_tag"
          git tag "$new_tag" origin/main
          git push origin "$new_tag"
