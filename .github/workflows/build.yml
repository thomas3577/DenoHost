name: Build and Publish NuGet Package

on:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:

jobs:
  get-version:
    name: Determine Deno Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract.outputs.version }}
    steps:
      - name: Extract Version
        id: extract
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
          else
            VERSION="2.3.7"
          fi
          echo "Deno version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "##[notice]Using version: $VERSION"

  build-core:
    name: Build DenoWrapper.Core
    needs: get-version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Build Core Project
        run: dotnet pack src/DenoWrapper.Core/DenoWrapper.Core.csproj -c Release -p:Version=${{ needs.get-version.outputs.version }}

      - name: Run Unit Tests
        run: dotnet test DenoWrapper.Tests/DenoWrapper.Tests.csproj --no-build --configuration Release

      - name: Publish Core NuGet (only for tag)
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet nuget push **/DenoWrapper.Core.*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
      
      - name: Upload Core Package as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DenoWrapper.Core.${{ needs.get-version.outputs.version }}
          path: |
            **/DenoWrapper.Core.*.nupkg
            **/DenoWrapper.Core.*.snupkg
          retention-days: 1

      - name: Upload Core Package to GitHub Release (only for tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            **/DenoWrapper.Core.*.nupkg
            **/DenoWrapper.Core.*.snupkg

  build-runtime:
    name: Build Runtime Packages
    needs: get-version
    strategy:
      matrix:
        include:
          - rid: win-x64
            zip: deno-x86_64-pc-windows-msvc.zip
            proj: src/DenoWrapper.Runtime.win-x64/DenoWrapper.Runtime.win-x64.csproj
            os: windows-latest
          - rid: linux-x64
            zip: deno-x86_64-unknown-linux-gnu.zip
            proj: src/DenoWrapper.Runtime.linux-x64/DenoWrapper.Runtime.linux-x64.csproj
            os: ubuntu-latest
          - rid: linux-arm64
            zip: deno-aarch64-unknown-linux-gnu.zip
            proj: src/DenoWrapper.Runtime.linux-arm64/DenoWrapper.Runtime.linux-arm64.csproj
            os: ubuntu-latest
          - rid: osx-x64
            zip: deno-x86_64-apple-darwin.zip
            proj: src/DenoWrapper.Runtime.osx-x64/DenoWrapper.Runtime.osx-x64.csproj
            os: ubuntu-latest
          - rid: osx-arm64
            zip: deno-aarch64-apple-darwin.zip
            proj: src/DenoWrapper.Runtime.osx-arm64/DenoWrapper.Runtime.osx-arm64.csproj
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Download Deno for ${{ matrix.rid }}
        shell: bash
        run: |
          VERSION=${{ needs.get-version.outputs.version }}
          curl -L --retry 3 -o deno.zip https://github.com/denoland/deno/releases/download/v$VERSION/${{ matrix.zip }}
          mkdir -p runtimes/${{ matrix.rid }}/native
          unzip -j deno.zip "deno*" -d runtimes/${{ matrix.rid }}/native

      - name: Test Deno binary
        run: |
          chmod +x runtimes/${{ matrix.rid }}/native/deno
          runtimes/${{ matrix.rid }}/native/deno --version

      - name: Build Runtime Package
        run: dotnet pack ${{ matrix.proj }} -c Release -p:Version=${{ needs.get-version.outputs.version }}

      - name: Publish Runtime NuGet (only for tag)
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet nuget push **/DenoWrapper.Runtime.${{ matrix.rid }}.*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}

      - name: Upload Runtime Package as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DenoWrapper.Runtime.${{ matrix.rid }}.${{ needs.get-version.outputs.version }}
          path: |
            **/DenoWrapper.Runtime.${{ matrix.rid }}.*.nupkg
            **/DenoWrapper.Runtime.${{ matrix.rid }}.*.snupkg
          retention-days: 1

      - name: Upload Runtime Package to GitHub Release (only for tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            **/DenoWrapper.Runtime.${{ matrix.rid }}.*.nupkg
            **/DenoWrapper.Runtime.${{ matrix.rid }}.*.snupkg

